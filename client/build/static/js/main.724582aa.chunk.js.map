{"version":3,"sources":["assets/images/projects/form-validation.jpg","assets/images/projects/gulp.jpg","assets/images/projects/myProjects.jpg","assets/images/projects/restapi.jpg","assets/images/projects/todos.jpg","assets/images/projects/whs.jpg","assets/images/projects sync /^/.*/.jpg$","assets/images/projects sync /^/.*$","components/Loader.tsx","components/ProjectCard.tsx","utils/default.ts","components/ProjectList.tsx","redux/hooks.ts","redux/API/projectsAPI.ts","redux/API/queries.ts","redux/reducers/projectsSlice.ts","redux/reducers/technologiesSlice.ts","utils/technology.ts","components/TechInput.tsx","components/TechInputs.tsx","pages/ProjectsPage.tsx","components/ComeBack.tsx","pages/Page404.tsx","components/ProjectInfo.tsx","components/ProjectDesc.tsx","redux/reducers/projectSlice.ts","pages/ProjectPage.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Loader","className","ProjectCard","project","projectImage","image","require","default","to","src","alt","title","toLowerCase","summary","ProjectList","projects","status","useAppDispatch","useDispatch","useAppSelector","useSelector","axiosParams","url","method","headers","ProjectsAPI","fetchProjects","a","axios","data","query","fetchProject","variables","fetchTechnologies","technologies","getProjects","createAsyncThunk","projectsSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","actions","makeSelectProjectsByTechs","createSelector","technologyList","chosens","projectList","filter","every","chosen","find","techItem","selectProjectListStatus","getTechnologies","technologiesSlice","toggleTech","findIndex","push","selectChosen","selectTechnologyList","selectTechnologyListStatus","getNormalName","trim","replaceAll","TechItem","item","dispatch","length","chosenId","type","value","checked","onChange","event","target","techType","htmlFor","TechInputs","techs","useState","ProjectsPage","useEffect","selectProjectsByTechs","useMemo","commonStore","projectsStatus","technologiesStatus","ComeBack","Page404","ProjectInfo","info","descriptions","desc","href","link","children","child","text","ProjectDesc","github","template","tech","infos","getProject","projectSlice","selectProjectData","selectProjectStatus","ProjectPage","projectId","useParams","App","path","element","store","configureStore","reducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.724582aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/form-validation.07c2c394.jpg\";","export default __webpack_public_path__ + \"static/media/gulp.58c0746d.jpg\";","export default __webpack_public_path__ + \"static/media/myProjects.1cc6b969.jpg\";","export default __webpack_public_path__ + \"static/media/restapi.cd1d1354.jpg\";","export default __webpack_public_path__ + \"static/media/todos.0dc1d53c.jpg\";","export default __webpack_public_path__ + \"static/media/whs.eba406e5.jpg\";","var map = {\n\t\"./form-validation.jpg\": 21,\n\t\"./gulp.jpg\": 22,\n\t\"./myProjects.jpg\": 23,\n\t\"./restapi.jpg\": 24,\n\t\"./todos.jpg\": 25,\n\t\"./whs.jpg\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43;","var map = {\n\t\"./form-validation.jpg\": 21,\n\t\"./gulp.jpg\": 22,\n\t\"./myProjects.jpg\": 23,\n\t\"./restapi.jpg\": 24,\n\t\"./todos.jpg\": 25,\n\t\"./whs.jpg\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 69;","import React from \"react\"\r\n\r\nexport const Loader: React.FC = () => <div className=\"lds-ripple\"><div></div><div></div></div>","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ShortProjectData } from \"../interfaces/project.interface\"\r\nimport { DEFAULT_CARD_THUMB } from \"../utils/default\"\r\n\r\ninterface iProjectCard {\r\n\tproject: ShortProjectData\r\n}\r\n\r\nexport const ProjectCard: React.FC<iProjectCard> = ({ project }) => {\r\n\tconst projectImage = project.image ?  require(`../assets/images/projects/${project.image}.jpg`).default : DEFAULT_CARD_THUMB\r\n\r\n\treturn (\r\n\t\t<li className=\"project_card\">\r\n\t\t\t<Link to={`/project/${project.id}`}>\r\n\t\t\t\t<div className=\"project_card__img\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={projectImage}\r\n\t\t\t\t\t\talt={project.title.toLowerCase()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"project_card__wrapper\">\r\n\t\t\t\t\t<h4 className=\"project_card__title\">{project.title}</h4>\r\n\t\t\t\t\t<p className=\"project_card__desc\">{project.summary}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t)\r\n}","export const SERVER_LINK: string = '/api/kir3kin/'\r\nexport const DEFAULT_CARD_THUMB: string = 'http://via.placeholder.com/250x200'\r\nexport const DEFAULT_PROJECT_IMG: string = 'http://via.placeholder.com/600x370'\r\nexport const PROJECT_IMAGE_FOLDER: string = '../assets/images/projects/'\r\nexport const PROJECT_IMAGE_EXTENTION: string = '.jpg'\r\nexport const HOME_LINK = '/'","import React from \"react\"\r\nimport { LoadingStatus } from \"../interfaces/loading.interface\"\r\nimport { ShortProjectData } from \"../interfaces/project.interface\"\r\nimport { Loader } from \"./Loader\"\r\nimport { ProjectCard } from \"./ProjectCard\"\r\n\r\ninterface iProjectList {\r\n\tprojects: ShortProjectData[],\r\n\tstatus: LoadingStatus\r\n}\r\n\r\nexport const ProjectList: React.FC<iProjectList> = ({ projects, status }) => {\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{status === 'loading' && <Loader />}\r\n\t\t\t{status === 'failed' && <p>Error</p>}\r\n\t\t\t{status === 'loaded' && (\r\n\t\t\t\t<ul className=\"projects__list\">\r\n\t\t\t\t\t{projects.map(project => {\r\n\t\t\t\t\t\treturn <ProjectCard \r\n\t\t\t\t\t\t\tkey={project.id}\r\n\t\t\t\t\t\t\tproject={project}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import axios from 'axios'\r\nimport { SERVER_LINK } from '../../utils/default'\r\nimport {\r\n\tPROJECTS_QUERY,\r\n\tPROJECT_QUERY,\r\n\tTECHNOLOGIES_QUERY\r\n} from './queries'\r\nimport {\r\n\tAxiosParamsType,\r\n\tiProjectQuery,\r\n\tiProjectsQuery,\r\n\tiTechnologyQuery\r\n} from '../../interfaces/api.interface';\r\n\r\nconst axiosParams: AxiosParamsType = {\r\n\turl: SERVER_LINK,\r\n\tmethod: 'POST',\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json',\r\n\t\t'Accept': 'application/json'\r\n\t},\r\n}\r\n\r\nexport class ProjectsAPI {\r\n\tstatic fetchProjects = async () => {\r\n\t\tconst { data: { data: { projects } } }: iProjectsQuery = await axios({\r\n\t\t\t...axiosParams,\r\n\t\t\tdata: { query: PROJECTS_QUERY }\r\n\t\t})\r\n\t\treturn projects\r\n\t}\r\n\r\n\tstatic fetchProject = async (id) => {\r\n\t\tconst { data: { data: { project } } }: iProjectQuery = await axios({\r\n\t\t\t...axiosParams,\r\n\t\t\tdata: {\r\n\t\t\t\tquery: PROJECT_QUERY,\r\n\t\t\t\tvariables: { id }\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn project\r\n\t}\r\n\r\n\tstatic fetchTechnologies = async () => {\r\n\t\tconst { data: { data: { technologies } } }: iTechnologyQuery = await axios({\r\n\t\t\t...axiosParams,\r\n\t\t\tdata: { query: TECHNOLOGIES_QUERY }\r\n\t\t})\r\n\t\treturn technologies\r\n\t}\r\n\r\n}","export const PROJECTS_QUERY: string = `query {\r\n\tprojects{\r\n\t\tid\r\n\t\ttitle\r\n\t\tsummary\r\n\t\timage\r\n\t\tinWorking\r\n\t\tisHide\r\n\t\ttechnologies {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\ttechType {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}`\r\n\r\nexport const createContactQuery = `mutation CreateContact($input: ContactInput) {\r\n\tcreateContact(input: $input) {\r\n\t\t_id\r\n\t\tname\r\n\t\temail\r\n\t}\r\n}`\r\n\r\n\r\nexport const PROJECT_QUERY: string = `query Project($id: ID!) {\r\n\tproject(id: $id){\r\n\t\tid\r\n\t\ttitle\r\n\t\tsummary\r\n\t\timage\r\n\t\tlink\r\n\t\tgithub\r\n\t\ttemplate\r\n\t\tinWorking\r\n\t\tisHide\r\n\t\tcreatedAt\r\n\t\tupdatedAt\r\n\t\tinfos {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\tdescriptions {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\tlink\r\n\t\t\t\tchildren {\r\n\t\t\t\t\tid\r\n\t\t\t\t\ttext\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ttechnologies {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\ttechType {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t\tauthors {\r\n\t\t\tid\r\n\t\t\troleId\r\n\t\t\talias\r\n\t\t\temail\r\n\t\t\tcreatedAt\r\n\t\t\tupdatedAt\r\n\t\t\trole {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}`\r\n\r\n\r\nexport const TECHNOLOGIES_QUERY: string =`query {\r\n\ttechnologies {\r\n\t\tid\r\n\t\ttitle\r\n\t\ttechType {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t}\r\n\t}\r\n}`","import { createAsyncThunk, createSlice, createSelector } from '@reduxjs/toolkit'\r\nimport { ShortProjectData } from '../../interfaces/project.interface';\r\nimport { LoadingStatus } from '../../interfaces/loading.interface'\r\nimport { Technology } from '../../interfaces/technology.interface';\r\nimport { ProjectsAPI } from '../API/projectsAPI';\r\nimport { RootState } from '../store'\r\n\r\n\r\ninterface iProjectListState {\r\n  projects: ShortProjectData[],\r\n  technologies: Technology[],\r\n  status: LoadingStatus\r\n}\r\n\r\nconst initialState: iProjectListState = {\r\n  projects: [],\r\n  technologies: [],\r\n  status: \"empty\"\r\n}\r\n\r\nexport const getProjects = createAsyncThunk(\r\n  'projectList/fetchProjects',\r\n  async () => await ProjectsAPI.fetchProjects()\r\n)\r\n\r\nexport const projectsSlice = createSlice({\r\n  name: 'projectList',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProjects.pending, (state) => {\r\n        state.status = 'loading'\r\n      })\r\n      .addCase(getProjects.fulfilled, (state, action) => {\r\n        state.status = 'loaded'\r\n        state.projects = action.payload\r\n      })\r\n      .addCase(getProjects.rejected, (state) => {\r\n        state.status = 'failed'\r\n      })\r\n  },\r\n})\r\n\r\nexport const {} = projectsSlice.actions\r\n\r\nexport const makeSelectProjectsByTechs = () => {\r\n  return createSelector(\r\n    (state: RootState) => state.technologyList.chosens,\r\n    (state: RootState) => state.projectList.projects,\r\n    (chosens, projectList) => {\r\n      return projectList.filter(project => {\r\n        return chosens.every(chosen => {\r\n          return project.technologies.find(techItem => {\r\n            return techItem.id === chosen\r\n          })\r\n        })\r\n      })\r\n    }\r\n  )\r\n}\r\n\r\nexport const selectProjectList = (state: RootState) => state.projectList.projects\r\nexport const selectProjectListStatus = (state: RootState) => state.projectList.status\r\n\r\nexport default projectsSlice.reducer","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LoadingStatus } from '../../interfaces/loading.interface'\r\nimport { Technology } from '../../interfaces/technology.interface';\r\nimport { ProjectsAPI } from '../API/projectsAPI';\r\nimport { RootState } from '../store'\r\n\r\n\r\ninterface iTechnologyListState {\r\n  technologies: Technology[],\r\n  status: LoadingStatus,\r\n  chosens: string[]\r\n}\r\n\r\nconst initialState: iTechnologyListState = {\r\n  technologies: [],\r\n  status: \"empty\",\r\n  chosens: []\r\n}\r\n\r\nexport const getTechnologies = createAsyncThunk(\r\n  'technologyList/fetchTechnologies',\r\n  async () => await ProjectsAPI.fetchTechnologies()\r\n)\r\n\r\nexport const technologiesSlice = createSlice({\r\n  name: 'projectList',\r\n  initialState,\r\n  reducers: {\r\n    toggleTech: (state, action: PayloadAction<string>) => {\r\n      const temp = state.chosens.findIndex(chosen => chosen === action.payload)\r\n\r\n      if (temp >= 0) {\r\n        state.chosens = state.chosens.filter(chosen => chosen !== action.payload)\r\n      } else state.chosens.push(action.payload)\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getTechnologies.pending, (state) => {\r\n        state.status = 'loading'\r\n      })\r\n      .addCase(getTechnologies.fulfilled, (state, action) => {\r\n        state.status = 'loaded'\r\n        state.technologies = action.payload\r\n      })\r\n      .addCase(getTechnologies.rejected, (state) => {\r\n        state.status = 'failed'\r\n      })\r\n  },\r\n})\r\n\r\nexport const { toggleTech } = technologiesSlice.actions\r\nexport const selectChosen = (state: RootState) => state.technologyList.chosens\r\n\r\n\r\nexport const selectTechnologyList = (state: RootState) => state.technologyList.technologies\r\nexport const selectTechnologyListStatus = (state: RootState) => state.technologyList.status\r\n\r\nexport default technologiesSlice.reducer","export const getNormalName = (name: string): string => {\r\n\treturn name.toLowerCase().trim().replaceAll(' ', '-')\r\n}","import React, { useState } from \"react\"\r\nimport { Technology } from \"../interfaces/technology.interface\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { selectChosen, toggleTech } from \"../redux/reducers/technologiesSlice\"\r\nimport { getNormalName } from \"../utils/technology\"\r\n\r\ninterface iTechItem {\r\n\titem: Technology,\r\n\tchosens: string[]\r\n}\r\n\r\nexport const TechItem: React.FC<iTechItem> = ({ item, chosens }) => {\r\n\tconst dispatch = useAppDispatch()\r\n\t// const chosens = useAppSelector(selectChosen)\r\n\r\n\t\t// console.log('hi') 12  MEMOrize it\r\n\tconst changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tdispatch(toggleTech(event.target.value))\r\n\t}\r\n\t// console.log('chosens:', chosens)\r\n\t\r\n\tconst chosen: boolean = (chosens.length >= 1) && (\r\n\t\t!!(chosens.find(chosenId => chosenId === item.id))\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tid={`tech-${item.id}`}\r\n\t\t\t\tclassName=\"tech__input\"\r\n\t\t\t\tvalue={`${item.id}`}\r\n\t\t\t\tchecked={chosen}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t/>\r\n\t\t\t<label\r\n\t\t\t\tclassName={`tech__label tech__label--${getNormalName(item.techType.title)}`}\r\n\t\t\t\thtmlFor={`tech-${item.id}`}\r\n\t\t\t>\r\n\t\t\t\t{item.title}\r\n\t\t\t</label>\r\n\t\t</>\r\n\t)\r\n\r\n} ","import React, { useState } from \"react\"\r\nimport { LoadingStatus } from \"../interfaces/loading.interface\"\r\nimport { Technology } from \"../interfaces/technology.interface\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { selectChosen } from \"../redux/reducers/technologiesSlice\"\r\nimport { Loader } from \"./Loader\"\r\nimport { TechItem } from \"./TechInput\"\r\n\r\ninterface iTechInputs {\r\n\ttechs: Technology[],\r\n\tstatus: LoadingStatus\r\n}\r\n\r\ntype Boxes = {\r\n\tid: string,\r\n\tchecked: boolean\r\n}\r\n\r\nexport const TechInputs: React.FC<iTechInputs> = ({\r\n\ttechs, status\r\n}) => {\r\n\tconst dispatch = useAppDispatch()\r\n\tconst [boxes, setBoxes] = useState<Boxes[]>([])\r\n\tconst chosens = useAppSelector(selectChosen)\r\n\r\n\t// console.log('main chosens:', chosens)\r\n\r\n\t// use Memo | Callback\r\n\t\r\n\t{/* todo: add \"click to filter\" */}\r\n\treturn (<>\r\n\t\t<h2 className=\"sidebar__header header--stylish\">Technologies</h2>\r\n\t\t{status === 'loading' && <Loader />}\r\n\t\t{status === 'failed' && <p>Error</p>}\r\n\t\t{status === 'loaded' && techs.length && (\r\n\t\t\t<form className=\"tech\" action=\"#\">\r\n\t\t\t\t{techs.map(item => {\r\n\t\t\t\t\treturn <TechItem \r\n\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\tchosens={chosens}\r\n\t\t\t\t\t/>\r\n\t\t\t\t})}\r\n\t\t\t</form>\r\n\t\t)}\r\n\t</>)\r\n}","import React, { useCallback, useEffect, useMemo } from \"react\"\r\nimport { ProjectList } from \"../components/ProjectList\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { getProjects, selectProjectList, selectProjectListStatus, makeSelectProjectsByTechs } from \"../redux/reducers/projectsSlice\"\r\nimport { getTechnologies, selectChosen, selectTechnologyList, selectTechnologyListStatus } from \"../redux/reducers/technologiesSlice\"\r\nimport { TechInputs } from \"../components/TechInputs\"\r\n\r\nexport const ProjectsPage: React.FC = () => {\r\n\tconst dispatch = useAppDispatch()\r\n\tuseEffect(() => {\r\n\t\t\tdispatch(getProjects())\r\n\t\t\tdispatch(getTechnologies())\r\n\t}, [dispatch])\r\n\r\n\t// const some = useAppSelector(makeSelectProjectsByTechs)\r\n\tconst selectProjectsByTechs = useMemo(makeSelectProjectsByTechs, [])\r\n\r\n\tconst commonStore = {\r\n\t\t\r\n\t\tprojectList: useAppSelector(selectProjectsByTechs),\r\n\t\ttechnologyList: useAppSelector(selectTechnologyList),\r\n\t\tprojectsStatus: useAppSelector(selectProjectListStatus),\r\n\t\ttechnologiesStatus: useAppSelector(selectTechnologyListStatus)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<aside className=\"sidebar\">\r\n\t\t\t\t\t<TechInputs\r\n\t\t\t\t\t\ttechs={commonStore.technologyList}\r\n\t\t\t\t\t\tstatus={commonStore.technologiesStatus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</aside>\r\n\t\t\t\t<main className=\"projects\">\r\n\t\t\t\t\t<h1 className=\"projects__header header--stylish\">Projects</h1>\r\n\r\n\t\t\t\t\t{(commonStore.projectList.length >= 1) ? (\r\n\t\t\t\t\t\t<ProjectList\r\n\t\t\t\t\t\t\tprojects={commonStore.projectList}\r\n\t\t\t\t\t\t\tstatus={commonStore.projectsStatus}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (<p className=\"projects__notfoud\">No projects are found!</p>)}\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { HOME_LINK } from \"../utils/default\"\r\n\r\nexport const ComeBack: React.FC = () => <Link to={HOME_LINK} className=\"come_back\">Home page</Link>","import React from \"react\"\r\nimport { ComeBack } from \"../components/ComeBack\"\r\n\r\nexport const Page404: React.FC = () => {\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ComeBack />\r\n\t\t\t\t\t<h1 className=\"page-404 header--stylish\">Page Not Found</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\"\r\nimport { Info } from \"../interfaces/project.interface\"\r\n\r\ninterface iProjectInfo {\r\n\tinfo: Info\r\n}\r\n\r\nexport const ProjectInfo: React.FC<iProjectInfo> = ({ info }) => (\r\n\t<li className=\"info-list__item\">\r\n\t\t<h4 className=\"info-list__header\">{info.title}</h4>\r\n\t\t{info.descriptions.length  >= 1 && (\r\n\t\t\t<div className=\"info-list__links\">\r\n\t\t\t\t{info.descriptions.map(desc => <div key={desc.id}>\r\n\t\t\t\t\t\t<a href={desc.link}>{desc.title}</a>\r\n\t\t\t\t\t\t{desc.children.length >= 1  && (\r\n\t\t\t\t\t\t\t<ul className=\"info-list__desc\">\r\n\t\t\t\t\t\t\t\t{desc.children.map(child => <li key={child.id}>{child.text}</li>)}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t)}\r\n\t</li>\r\n)","import React from \"react\"\r\nimport { iProject } from \"../interfaces/project.interface\"\r\nimport { DEFAULT_PROJECT_IMG, PROJECT_IMAGE_EXTENTION, PROJECT_IMAGE_FOLDER } from \"../utils/default\"\r\nimport { getNormalName } from \"../utils/technology\"\r\nimport { ComeBack } from \"./ComeBack\"\r\nimport { ProjectInfo } from \"./ProjectInfo\"\r\n\r\ninterface iProjectDesc {\r\n\tproject: iProject\r\n}\r\n\r\nexport const ProjectDesc: React.FC<iProjectDesc> = ({ project }) => {\r\n\r\n\t// console.log('project:', project)\r\n\tconst projectImage = project.image ? require('../assets/images/projects/'+ project.image + PROJECT_IMAGE_EXTENTION).default : DEFAULT_PROJECT_IMG\r\n\t// const projectImage = project.image ? require(`../assets/images/projects/${project.image}.jpg`).default : DEFAULT_PROJECT_IMG\r\n\t\r\n\treturn (\r\n\t\t\r\n\t\t<main className=\"project\">\r\n\t\t\t<ComeBack />\r\n\t\t\t<div className=\"project__about\">\r\n\t\t\t\t<div className=\"project__img\">\r\n\t\t\t\t\t<img src={projectImage} alt={project.title.toLowerCase()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"project__desc description\">\r\n\t\t\t\t\t<h1\r\n\t\t\t\t\t\tclassName=\"description__header header--stylish\"\r\n\t\t\t\t\t\ttitle=\"Project's Title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{project.title}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div className=\"description__links\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={project.github}\r\n\t\t\t\t\t\t\t\tclassName=\"description__link\"\r\n\t\t\t\t\t\t\t\ttitle=\"Project's Repository\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tGitHub\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={project.link}\r\n\t\t\t\t\t\t\t\tclassName=\"description__link\"\r\n\t\t\t\t\t\t\t\ttitle=\"Project's Website\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tWebsite\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t{project.template && (\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={project.template}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Project's Template\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"description__link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tTemplate\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"description__summary\"\r\n\t\t\t\t\t\ttitle=\"Project's Description\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p>{project.summary}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{project.technologies.length >= 1 && (\r\n\t\t\t\t\t\t<ul className=\"description__techs techs-list\">\r\n\t\t\t\t\t\t\t{project.technologies.map(tech => {\r\n\t\t\t\t\t\t\t\treturn <li\r\n\t\t\t\t\t\t\t\t\tkey={tech.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`techs-list__item techs-list__item--${getNormalName(tech.techType.title)}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{tech.title}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{project.infos.length >= 1 && (\r\n\t\t\t\t<ul className=\"project__info info-list\">\r\n\t\t\t\t\t{project.infos.map(info => {\r\n\t\t\t\t\t\treturn <ProjectInfo\r\n\t\t\t\t\t\t\tkey={info.id}\r\n\t\t\t\t\t\t\tinfo={info}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t)\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { iProject } from '../../interfaces/project.interface'\r\nimport { RootState } from '../store'\r\nimport { LoadingStatus } from '../../interfaces/loading.interface'\r\nimport { ProjectsAPI } from '../API/projectsAPI'\r\n\r\ninterface iProjectState {\r\n  data: iProject | null,\r\n  status: LoadingStatus\r\n}\r\n\r\nconst initialState: iProjectState = {\r\n  data: null,\r\n  status: \"empty\"\r\n}\r\n\r\nexport const getProject = createAsyncThunk(\r\n  'project/fetchProjectById',\r\n  async (id: string) => await ProjectsAPI.fetchProject(id)\r\n)\r\n\r\nexport const projectSlice = createSlice({\r\n  name: 'project',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProject.pending, (state) => {\r\n        state.status = 'loading'\r\n      })\r\n      .addCase(getProject.fulfilled, (state, action) => {\r\n        state.status = 'loaded'\r\n        state.data = action.payload\r\n      })\r\n      .addCase(getProject.rejected, (state) => {\r\n        state.status = 'failed'\r\n      })\r\n  },\r\n})\r\n\r\nexport const {} = projectSlice.actions\r\n\r\nexport const selectProjectData = (state: RootState) => state.project.data\r\nexport const selectProjectStatus = (state: RootState) => state.project.status\r\n\r\nexport default projectSlice.reducer","import React, { useEffect, useState } from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Loader } from \"../components/Loader\"\r\nimport { ProjectDesc } from \"../components/ProjectDesc\"\r\nimport { LoadingStatus } from \"../interfaces/loading.interface\"\r\nimport { iProject } from \"../interfaces/project.interface\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { getProject, selectProjectData, selectProjectStatus } from \"../redux/reducers/projectSlice\"\r\nimport { HOME_LINK } from \"../utils/default\"\r\n\r\nexport const ProjectPage: React.FC = () => {\r\n\tconst { id: projectId } = useParams<string>()\r\n\tconst dispatch = useAppDispatch()\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(getProject(projectId))\r\n\t}, [dispatch])\r\n\t\r\n\tconst project: iProject | null = useAppSelector(selectProjectData)\r\n\tconst status = useAppSelector(selectProjectStatus)\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t{status === 'loading' && <Loader />}\r\n\t\t\t{status === 'failed' && <p>Error</p>}\r\n\t\t\t{status === 'loaded' && (\r\n\t\t\t\tproject === null ? (\r\n\t\t\t\t\t<Navigate to={HOME_LINK} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ProjectDesc project={project} />\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n// import { Navbar } from './components/Navbar'\r\n\r\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\r\nimport './assets/scss/common.scss'\r\nimport { ProjectsPage } from './pages/ProjectsPage'\r\nimport { Page404 } from './pages/Page404'\r\nimport { ProjectPage } from './pages/ProjectPage'\r\n\r\nexport const App: React.FC = () => (\r\n\t<BrowserRouter>\r\n\t\t<Routes>\r\n\t\t\t<Route path=\"*\" element={ <Page404 /> } />\r\n\t\t\t<Route path=\"/\" element={ <ProjectsPage /> } />\r\n\t\t\t<Route path=\"/project/:id\" element={ <ProjectPage /> } />\r\n\t\t</Routes>\r\n\t</BrowserRouter>\r\n)","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport projectsSlice from './reducers/projectsSlice'\r\nimport projectSlice from './reducers/projectSlice'\r\nimport technologiesSlice from './reducers/technologiesSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    projectList: projectsSlice,\r\n    technologyList: technologiesSlice,\r\n    project: projectSlice\r\n  }\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { App } from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\nrender(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)"],"sourceRoot":""}